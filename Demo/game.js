function InitGame(){	Game.ctx.imageSmoothingEnabled = false;		CreatePlayer();		CreateEnemies();		CreateBullets();		winSound = new Sound("assets/sounds/winTheme.wav", 0.5, false);	//new Sound("assets/sounds/backgroundTheme.wav", 0.4, true);	explosionSound = new Sound("assets/sounds/explosion.wav", 0.5, false);	shotSound = new Sound("assets/sounds/shot.wav");}function CreatePlayer(){	playerTexture = Game.GetTexture("player");	player = new Sprite(0, 0, playerTexture, 0.5);	player.position.y = Game.canvas.height - player.scaledSize.y;	player.movementSpeed = 200;	player.rotation = 180;	player.enemiesShot = 0;	player.Update = function(){		if (Input.KeyHold(Input.D) && this.position.x <= Game.canvas.width - this.scaledSize.x){			this.position.x += this.movementSpeed * Game.deltaTime;		}		if (Input.KeyHold(Input.A) && this.position.x >= 0){			this.position.x -= this.movementSpeed * Game.deltaTime;		}				Shot();	}	Game.AddGameObject(player);}function CreateEnemies(){	enemyTexture = Game.GetTexture("enemy");	enemies = [];	enemiesQuantity = 10;		for (var i = 0; i < enemiesQuantity; i++){		enemies.push(new Sprite(0, i  * enemyTexture.height * 0.25, enemyTexture, 0.25));		enemies[i].movementSpeed = Math.random() * 80 + 80;		enemies[i].direction = 0;		enemies[i].AddTag("enemy");		enemies[i].Update = function(){			if (this.direction == 0){				this.position.x += this.movementSpeed * Game.deltaTime;				if (this.position.x >= Game.canvas.width - this.scaledSize.x)					this.direction = 1;			}			else {				this.position.x -= this.movementSpeed * Game.deltaTime;				if (this.position.x <= 0)					this.direction = 0;			}		}				Game.AddGameObject(enemies[i]);	}}function CreateBullets(){	bulletTexture = Game.GetTexture("bullet");		bullet = new Sprite(-100, -100, bulletTexture, 0.4);	bullet.visible = false;	bullet.speed = 240;	bullet.Update = function(){		if (this.visible){			this.position.y -= this.speed * Game.deltaTime;			if (this.position.y < -this.scaledSize.y)				this.visible = false;		}		collisions = this.OnCollisionEnter();		for (var i = 0; i < collisions.length; i++){			for (var tag = 0; tag < collisions[i].tags.length; tag++){							if (collisions[i].tags[tag] == "enemy"){					collisions[i].visible = false;					this.visible = false;					explosionSound.Play();					player.enemiesShot++;					if (player.enemiesShot == enemiesQuantity)						winSound.Play();				}				}		}	}	Game.AddGameObject(bullet);}function Shot(){	if (Input.key[Input.SPACE]){		if (bullet.visible)			return;				shotSound.Play();		bullet.position.x = player.position.x + (player.scaledSize.x / 2) - bullet.scaledSize.x / 2;		bullet.position.y = player.position.y + bullet.scaledSize.y;		bullet.visible = true;	}}